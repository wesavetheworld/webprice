#!/bin/bash

####################################################################################################
#                                                                                                  #
# author: max hebditch                                                                             #
# date:140814                                                                                      #
#                                                                                                  #
#  Script can be run alone using hard coded values like so                                         #
#                                                                                                  #
#     $ webprice                                                                                   #
#                                                                                                  #
#  It can also be run with an URL to check quickly                                                 #
#                                                                                                  #
#     $ webprice "http://www.amazon.co.uk/Untrue-Burial/dp/B000WTBMBK"                             #
#                                                                                                  #
#  or can give price compared to hard coded budget difference with a -b flag.                      #
#                                                                                                  #
#     $ webprice -b                                                                                #
#                                                                                                  #
#  Or a budget can be provide inline                                                               #
#                                                                                                  #
#     $ webprice -b 600 http://www.amazon.co.uk/Untrue-Burial/dp/B000WTBMBK                        #
#                                                                                                  #
#  Using a -l flag                                                                                 #
#                                                                                                  #
#     $ webprice -l                                                                                #
#                                                                                                  #
#  the result will be logged in a csv file in the following directory                              #
#                                                                                                  #
#     ~/scratch/logs/                                                                              #
#                                                                                                  #
#  If the directory doesn't exist the script will tell you. Directory can be changed easily.       #
#  The file name is dependent on the product name in the URL.                                      #
#                                                                                                  #
#  To log only with no terminal feedback the quiet flag, -q, can be used with the log flag -l      #
#                                                                                                  #
#     $ webprice -ql                                                                               #
#                                                                                                  #
#  This would be the best option for setting up a cron job                                         #
#                                                                                                  #
####################################################################################################

# Hardcoded budget and URL
budget="500"
URL="http://uk.pcpartpicker.com/user/maxhebditch/saved/yxgFf7"
currency="£"
loglocation=$HOME/scratch/logs
tempfile=$HOME/.webpricetemp.html

# regex to decide if numeric
check='^[0-9]+([.][0-9]+)?$'

# For one arguement
if [[ $# == "1" ]]; then
        if ! [[ $1 =~ $check ]]; then
                if [[ "$1" == *www.* ]] || [[ "$1" == http* ]] || [[ "$1" == *http* ]]; then
                        longurl="$1"
                        URL=$(echo $longurl | sed 's/?.*//g' | sed 's/\/ref=.*//' )
                else
                        mode="$1"
                fi
        else
                budget="$1"
        fi
fi

# For two arguements
if [[ $# == "2" ]]; then
        if ! [[ $1 =~ $check ]]; then
                if [[ "$1" == *www.* ]] || [[ "$1" == http.* ]] || [[ "$1" == *http* ]]; then
                        longurl="$1"
                        URL=$(echo $longurl | sed 's/?.*//g' | sed 's/\/ref=.*//' )
                else
                        mode="$1"
                fi
        else
                budget="$1"
        fi
        if ! [[ $2 =~ $check ]]; then
                if [[ "$2" == *www.* ]] || [[ "$2" == http.* ]] || [[ "$2" == *http* ]]; then
                        longurl="$2"
                        URL=$(echo $longurl | sed 's/?.*//g' | sed 's/\/ref=.*//' )
                else
                        mode="$2"
                fi
        else
                budget="$2"
        fi
fi

# For three arguements
if [[ $# == "3" ]]; then
        if ! [[ $1 =~ $check ]]; then
                if [[ "$1" == *www.* ]] || [[ "$1" == http.* ]] || [[ "$1" == *http* ]]; then
                        longurl="$1"
                        URL=$(echo $longurl | sed 's/?.*//g' | sed 's/\/ref=.*//' )
                else
                        mode="$1"
                fi
        else
                budget="$1"
        fi
        if ! [[ $2 =~ $check ]]; then
                if [[ "$2" == *www.* ]] || [[ "$2" == http.* ]] || [[ "$2" == *http* ]]; then
                        longurl="$2"
                        URL=$(echo $longurl | sed 's/?.*//g' | sed 's/\/ref=.*//' )
                else
                        mode="$2"
                fi
        else
                budget="$2"
        fi
        if ! [[ $3 =~ $check ]]; then
                if [[ "$3" == *www.* ]] || [[ "$3" == http.* ]] || [[ "$3" == *http* ]]; then
                        longurl="$3"
                        URL=$(echo $longurl | sed 's/?.*//g' | sed 's/\/ref=.*//' )
                else
                        mode="$3"
                fi
        else
                budget="$3"
        fi
fi

# Test what shop from URL
# Also will set web to specific information for each product so csv is named properly
if [[ "$URL" == *amazon* ]]; then
        cleanurl=${URL%/}
        shop=$(curl -s $cleanurl | iconv -f utf-8 -c | grep "actualPriceContent" | sed 's/^.*priceLarge">//' | sed 's/<\/b><\/span>//') 
        web=$(echo $URL | sed 's/http:\/\///g' | sed 's/^\/ref*//g' | cut -c 18- | sed -e 's/\/.*//g')
elif [[ "$URL" == *ebay* ]]; then
        cleanurl=${URL%/}
        shop=$(curl -s $cleanurl | iconv -f utf-8 -c | grep -m1 "prcIsum_bidPrice" | sed 's/^.*price">//' | sed 's/<\/span>//' | tr -d $'\r' | sed -e s/"$currency"// )
        web=$(echo $URL | sed 's/http:\/\///g' | sed 's/^[^itm]*//g' | cut -c 5- | sed 's/\/.*//g')
elif [[ "$URL" == *pcpartpicker.com/user* ]]; then
        cleanurl=${URL%/}
        curl -s $cleanurl > $tempfile
        partTotal=$(cat $tempfile | grep -c "text-align:right;font-weight:bold")
        partNum=0
        while [ $partNum -lt $partTotal ];
        do 
                let partNum+=1
                partcost[$partNum]=$(cat $tempfile | grep -m $partNum "text-align:right;font-weight:bold" | sed 's/.*ank">//g' | sed 's|</a></td>||g' | cut -c 3-)
                partcosts="partcost[$partNum]"
                partName[$partNum]=$(cat $tempfile | grep -m $partNum "text-align:right;font-weight:bold" | sed 's|.*<a href="||g' | sed 's|".*||g')
                partNames="partName[$partNum]"
        done
        let pstuff=0
        while [ $pstuff -le $partTotal ]; 
        do
                pname="$(echo "${!partNames}" | head -n $pstuff | tail -n 1 )"
                pcost="$(echo "${!partcosts}" | head -n $pstuff | tail -n 1 )"
                printf "%-80s %-100s \n" $pname $pcost
                let pstuff+=1
        done
        printf "\n"
        shop=$(cat $tempfile | grep -A 1 "Total" | grep "$currency" | cut -c 106-111)
        pclist=$(echo $cleanurl | tail -c7)
        web=$(echo "pcpartpicker-$pclist")
        rm $tempfile
elif [[ "$URL" == *pcpartpicker.com/part* ]]; then
        cleanurl=${URL%/}
        shop=$(curl -s $cleanurl | iconv -f utf-8 | grep -m1 -A 2 'spr_nopromo' | grep "$currency" | sed 's/^.*£//' | sed 's/<\/a><\/td>//')
        pclist=$(echo $cleanurl | sed 's/^.*part\///')
        web=$(echo "pcpartpicker-$pclist")
else
        printf "Sorry, that URL is not supported yet\n"
fi

# If script is run on its own then just use hard coded values
if [[ $# == "0" ]]; then
        echo -e "Current price of $web is $currency$shop\n"
        exit
fi

# Compare budget to scraped price
difference=$(echo "$budget - $shop" | bc -l)
difference2=$(echo "$shop - $budget" | bc -l)

# if not quiet mode and not logging
if ! [[ "$mode" =~ *q* ]]; then
        echo -e "Current price of $web is $currency$shop\n"
        if [[ "$mode" == *b* ]]; then
                if (( $(echo "$shop < $budget" | bc -l) )); then
                        printf "Good news, $web is cheaper than $currency$budget by $currency$difference\n"
                else   
                        printf "Unfortunately $web is still $currency$difference2 over budget\n"
                fi
        fi
fi

# exit if not on log mode
if [[ "$mode" == *l* ]]; then
        #checks if log directory and file exists, if it doesn't then it makes the headers first
        if [[ -d "$loglocation" ]]; then
                if [ -f "$loglocation"/"$web".csv ]; then
                        if [[ "$mode" == *b* ]]; then
                                echo "$(date +"%F"),$shop,$budget,$difference2" >> "$loglocation"/"$web".csv
                        else
                                if [[ "$URL" == *pcpartpicker.com/user* ]]; then
                                        echo -e "\n" >> "$loglocation"/"$web".csv
                                        echo -e "DATE:$(date)" >> "$loglocation"/"$web".csv
                                        for (( i=1; i <= "$partTotal"; i++ ))
                                        do
                                                pname="$(echo "${!partNames}" | head -n $i | tail -n 1 )"
                                                pcost="$(echo "${!partcosts}" | head -n $i | tail -n 1 )"
                                                echo "$pname, $pcost" >> "$loglocation"/"$web".csv
                                        done
                                else
                                        echo "$(date +"%F"),$shop" >> "$loglocation"/"$web".csv
                                fi
                        fi
                else
                        touch "$loglocation"/"$web".csv
                        echo -e "DATE:$(date)" >> "$loglocation"/"$web".csv
                        if [[ "$mode" == *b* ]]; then
                                echo "Date, Online price, Desired price, Difference" >> "$loglocation"/"$web".csv
                                echo "$(date +"%F"),$shop,$budget,$difference2" >> "$loglocation"/"$web".csv
                        elif [[ "$URL" == *"pcpartpicker.com/user"* ]]; then
                                for (( i=1; i <= "$partTotal"; i++ ));
                                        do
                                                pname="$(echo "${!partNames}" | head -n $i | tail -n 1 )"
                                                pcost="$(echo "${!partcosts}" | head -n $i | tail -n 1 )"
                                                echo "$pname, $pcost" >> "$loglocation"/"$web".csv
                                        done
                        else
                                echo "Date, Online price" > "$loglocation"/"$web".csv
                                echo "$(date +"%F"),$shop" >> "$loglocation"/"$web".csv
                        fi
                fi
        else
                printf "You need to make the log folder ~/scratch/logs to log details\n"
        fi
else
        exit
fi
